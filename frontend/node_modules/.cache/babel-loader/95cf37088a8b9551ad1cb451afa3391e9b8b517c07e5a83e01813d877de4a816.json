{"ast":null,"code":"var _jsxFileName = \"/Users/luistejada/Downloads/FinalProject/frontend/src/components/ListaCriptomonedas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importar useNavigate para la navegación\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListaCriptomonedas = () => {\n  _s();\n  const [criptomonedas, setCriptomonedas] = useState({});\n  const [saldo, setSaldo] = useState(0); // Agregar el saldo del usuario\n  const [criptoSeleccionada, setCriptoSeleccionada] = useState('');\n  const [montoInvertido, setMontoInvertido] = useState(0); // Slider controlará el monto a invertir\n  const [mensaje, setMensaje] = useState('');\n  const navigate = useNavigate(); // Hook para la navegación\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Obtener criptomonedas\n      axios.get('http://localhost:5000/api/cryptos/lista', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => setCriptomonedas(response.data)).catch(error => console.error('Error al obtener criptomonedas', error));\n\n      // Obtener saldo del usuario\n      axios.get('http://localhost:5000/api/saldo', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => setSaldo(response.data.saldo)) // Guardar el saldo del usuario\n      .catch(error => console.error('Error al obtener el saldo', error));\n    }\n  }, []);\n\n  // Lógica para manejar la inversión\n  const handleInvertir = async () => {\n    if (!criptoSeleccionada || montoInvertido <= 0) {\n      setMensaje('Selecciona una criptomoneda y un monto válido.');\n      return;\n    }\n\n    // Validación para evitar que el monto sea mayor que el saldo disponible\n    if (montoInvertido > saldo) {\n      setMensaje('No tienes suficiente saldo para esta inversión.');\n      return;\n    }\n\n    // Lógica para realizar la inversión\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.post('http://localhost:5000/api/portafolio/invertir', {\n        criptomoneda: criptoSeleccionada,\n        monto: montoInvertido\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Respuesta del servidor:', response.data); // Asegúrate de que la respuesta sea exitosa\n      setMensaje(`Has invertido ${montoInvertido} USD en ${criptoSeleccionada}.`);\n    } catch (error) {\n      console.error('Error al realizar la inversión:', error); // Verifica si hay errores\n      setMensaje('Error al realizar la inversión.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Criptomonedas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(criptomonedas).map(simbolo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [simbolo, \": $\", criptomonedas[simbolo], /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCriptoSeleccionada(simbolo),\n          children: \"Seleccionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, simbolo, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), criptoSeleccionada && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Invertir en \", criptoSeleccionada]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Saldo disponible: $\", saldo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: saldo,\n        value: montoInvertido,\n        onChange: e => setMontoInvertido(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Monto a invertir: $\", montoInvertido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInvertir,\n        children: \"Invertir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/home'),\n      children: \"Volver a Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ListaCriptomonedas, \"vw/g1uRXQggEnB3asQ0cU0chX6U=\", false, function () {\n  return [useNavigate];\n});\n_c = ListaCriptomonedas;\nexport default ListaCriptomonedas;\nvar _c;\n$RefreshReg$(_c, \"ListaCriptomonedas\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ListaCriptomonedas","_s","criptomonedas","setCriptomonedas","saldo","setSaldo","criptoSeleccionada","setCriptoSeleccionada","montoInvertido","setMontoInvertido","mensaje","setMensaje","navigate","token","localStorage","getItem","get","headers","Authorization","then","response","data","catch","error","console","handleInvertir","post","criptomoneda","monto","log","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","simbolo","onClick","type","min","max","value","onChange","e","Number","target","_c","$RefreshReg$"],"sources":["/Users/luistejada/Downloads/FinalProject/frontend/src/components/ListaCriptomonedas.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; // Importar useNavigate para la navegación\nimport axios from 'axios';\n\nconst ListaCriptomonedas: React.FC = () => {\n  const [criptomonedas, setCriptomonedas] = useState<{ [key: string]: number }>({});\n  const [saldo, setSaldo] = useState(0);  // Agregar el saldo del usuario\n  const [criptoSeleccionada, setCriptoSeleccionada] = useState('');\n  const [montoInvertido, setMontoInvertido] = useState(0);  // Slider controlará el monto a invertir\n  const [mensaje, setMensaje] = useState('');\n  const navigate = useNavigate(); // Hook para la navegación\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    \n    if (token) {\n      // Obtener criptomonedas\n      axios.get('http://localhost:5000/api/cryptos/lista', {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n      .then(response => setCriptomonedas(response.data))\n      .catch(error => console.error('Error al obtener criptomonedas', error));\n\n      // Obtener saldo del usuario\n      axios.get('http://localhost:5000/api/saldo', {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n      .then(response => setSaldo(response.data.saldo))  // Guardar el saldo del usuario\n      .catch(error => console.error('Error al obtener el saldo', error));\n    }\n  }, []);\n\n  // Lógica para manejar la inversión\n  const handleInvertir = async () => {\n    if (!criptoSeleccionada || montoInvertido <= 0) {\n      setMensaje('Selecciona una criptomoneda y un monto válido.');\n      return;\n    }\n\n    // Validación para evitar que el monto sea mayor que el saldo disponible\n    if (montoInvertido > saldo) {\n      setMensaje('No tienes suficiente saldo para esta inversión.');\n      return;\n    }\n\n    // Lógica para realizar la inversión\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.post('http://localhost:5000/api/portafolio/invertir', \n        {\n          criptomoneda: criptoSeleccionada,\n          monto: montoInvertido\n        },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      console.log('Respuesta del servidor:', response.data);  // Asegúrate de que la respuesta sea exitosa\n      setMensaje(`Has invertido ${montoInvertido} USD en ${criptoSeleccionada}.`);\n    } catch (error) {\n      console.error('Error al realizar la inversión:', error);  // Verifica si hay errores\n      setMensaje('Error al realizar la inversión.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Lista de Criptomonedas</h2>\n      <ul>\n        {Object.keys(criptomonedas).map((simbolo) => (\n          <li key={simbolo}>\n            {simbolo}: ${criptomonedas[simbolo]}\n            <button onClick={() => setCriptoSeleccionada(simbolo)}>Seleccionar</button>\n          </li>\n        ))}\n      </ul>\n\n      {criptoSeleccionada && (\n        <>\n          <h3>Invertir en {criptoSeleccionada}</h3>\n          <p>Saldo disponible: ${saldo}</p>\n          <input \n            type=\"range\" \n            min=\"0\" \n            max={saldo} \n            value={montoInvertido} \n            onChange={(e) => setMontoInvertido(Number(e.target.value))} \n          />\n          <p>Monto a invertir: ${montoInvertido}</p>\n          <button onClick={handleInvertir}>Invertir</button>\n        </>\n      )}\n\n      <button onClick={() => navigate('/home')}>Volver a Home</button> {/* Botón para volver a Home */}\n      <p>{mensaje}</p>\n    </div>\n  );\n};\n\nexport default ListaCriptomonedas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}