{"ast":null,"code":"var _jsxFileName = \"/Users/luistejada/Downloads/FinalProject/frontend/src/components/AgregarSaldo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AgregarSaldo = () => {\n  _s();\n  const [monto, setMonto] = useState('');\n  const [mensaje, setMensaje] = useState('');\n  const handleAgregarSaldo = async () => {\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.post('http://localhost:5000/api/saldo/agregar', {\n        amount: parseFloat(monto)\n      },\n      // Asegúrate de enviar un número, no una cadena\n      {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      console.log('Monto a agregar:', parseFloat(monto)); // Verificar qué monto estás enviando\n      setMensaje('Saldo agregado exitosamente.');\n      setMonto(''); // Limpiar el campo\n    } catch (error) {\n      setMensaje('Error al agregar saldo');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Agregar Saldo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      placeholder: \"Monto en USD\",\n      value: monto,\n      onChange: e => setMonto(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleAgregarSaldo,\n      children: \"Agregar Saldo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AgregarSaldo, \"jmu4WxwjMkimsGWytQPUCNGuNjc=\");\n_c = AgregarSaldo;\nexport default AgregarSaldo;\nvar _c;\n$RefreshReg$(_c, \"AgregarSaldo\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","AgregarSaldo","_s","monto","setMonto","mensaje","setMensaje","handleAgregarSaldo","token","localStorage","getItem","response","post","amount","parseFloat","headers","Authorization","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/luistejada/Downloads/FinalProject/frontend/src/components/AgregarSaldo.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst AgregarSaldo: React.FC = () => {\n  const [monto, setMonto] = useState('');\n  const [mensaje, setMensaje] = useState('');\n\n  const handleAgregarSaldo = async () => {\n    const token = localStorage.getItem('token');\n  \n    try {\n      const response = await axios.post('http://localhost:5000/api/saldo/agregar', \n        { amount: parseFloat(monto) },  // Asegúrate de enviar un número, no una cadena\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      console.log('Monto a agregar:', parseFloat(monto)); // Verificar qué monto estás enviando\n      setMensaje('Saldo agregado exitosamente.');\n      setMonto('');  // Limpiar el campo\n    } catch (error) {\n      setMensaje('Error al agregar saldo');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Agregar Saldo</h2>\n      <input \n        type=\"number\" \n        placeholder=\"Monto en USD\" \n        value={monto} \n        onChange={(e) => setMonto(e.target.value)} \n      />\n      <button onClick={handleAgregarSaldo}>Agregar Saldo</button>\n      <p>{mensaje}</p>\n    </div>\n  );\n};\n\nexport default AgregarSaldo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,YAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,kBAAkB,GAAG,MAAAA,CAAA,KAAY;IACrC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAE3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,yCAAyC,EACzE;QAAEC,MAAM,EAAEC,UAAU,CAACX,KAAK;MAAE,CAAC;MAAG;MAChC;QAAEY,OAAO,EAAE;UAAEC,aAAa,EAAE,UAAUR,KAAK;QAAG;MAAE,CAClD,CAAC;MACDS,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEJ,UAAU,CAACX,KAAK,CAAC,CAAC,CAAC,CAAC;MACpDG,UAAU,CAAC,8BAA8B,CAAC;MAC1CF,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAE;IACjB,CAAC,CAAC,OAAOe,KAAK,EAAE;MACdb,UAAU,CAAC,wBAAwB,CAAC;IACtC;EACF,CAAC;EAED,oBACEN,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBxB,OAAA;MACEyB,IAAI,EAAC,QAAQ;MACbC,WAAW,EAAC,cAAc;MAC1BC,KAAK,EAAExB,KAAM;MACbyB,QAAQ,EAAGC,CAAC,IAAKzB,QAAQ,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,eACFxB,OAAA;MAAQ+B,OAAO,EAAExB,kBAAmB;MAAAa,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3DxB,OAAA;MAAAoB,QAAA,EAAIf;IAAO;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACtB,EAAA,CAjCID,YAAsB;AAAA+B,EAAA,GAAtB/B,YAAsB;AAmC5B,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}