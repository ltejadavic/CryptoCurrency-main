{"ast":null,"code":"var _jsxFileName = \"/Users/luistejada/Downloads/FinalProject/frontend/src/components/ListaCriptomonedas.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListaCriptomonedas = () => {\n  _s();\n  const [criptomonedas, setCriptomonedas] = useState({});\n  const [saldo, setSaldo] = useState(0);\n  const [criptoSeleccionada, setCriptoSeleccionada] = useState('');\n  const [montoInvertido, setMontoInvertido] = useState(0);\n  const [mensaje, setMensaje] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Obtener criptomonedas de la API y guardar en el localStorage\n      axios.get('http://api.coinlayer.com/live', {\n        params: {\n          access_key: process.env.REACT_APP_COINLAYER_API_KEY,\n          target: 'USD'\n        }\n      }).then(response => {\n        setCriptomonedas(response.data.rates);\n        // Guardar los precios de criptomonedas en localStorage\n        localStorage.setItem('preciosCriptos', JSON.stringify(response.data.rates));\n      }).catch(error => console.error('Error al obtener criptomonedas', error));\n\n      // Obtener saldo del usuario\n      axios.get('http://localhost:5000/api/saldo', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => setSaldo(response.data.saldo)).catch(error => console.error('Error al obtener el saldo', error));\n    }\n  }, []);\n  const handleInvertir = async () => {\n    if (!criptoSeleccionada || montoInvertido <= 0) {\n      setMensaje('Selecciona una criptomoneda y un monto válido.');\n      return;\n    }\n    if (montoInvertido > saldo) {\n      setMensaje('No tienes suficiente saldo para esta inversión.');\n      return;\n    }\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.post('http://localhost:5000/api/portafolio/invertir', {\n        criptomoneda: criptoSeleccionada,\n        monto: montoInvertido\n      }, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setMensaje(`Has invertido ${montoInvertido} USD en ${criptoSeleccionada}.`);\n    } catch (error) {\n      setMensaje('Error al realizar la inversión.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Lista de Criptomonedas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.keys(criptomonedas).map(simbolo => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [simbolo, \": $\", criptomonedas[simbolo], /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setCriptoSeleccionada(simbolo),\n          children: \"Seleccionar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)]\n      }, simbolo, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), criptoSeleccionada && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Invertir en \", criptoSeleccionada]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Saldo disponible: $\", saldo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"0\",\n        max: saldo,\n        value: montoInvertido,\n        onChange: e => setMontoInvertido(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Monto a invertir: $\", montoInvertido]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleInvertir,\n        children: \"Invertir\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/home'),\n      children: \"Volver a Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: mensaje\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(ListaCriptomonedas, \"vw/g1uRXQggEnB3asQ0cU0chX6U=\", false, function () {\n  return [useNavigate];\n});\n_c = ListaCriptomonedas;\nexport default ListaCriptomonedas;\nvar _c;\n$RefreshReg$(_c, \"ListaCriptomonedas\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","ListaCriptomonedas","_s","criptomonedas","setCriptomonedas","saldo","setSaldo","criptoSeleccionada","setCriptoSeleccionada","montoInvertido","setMontoInvertido","mensaje","setMensaje","navigate","token","localStorage","getItem","get","params","access_key","process","env","REACT_APP_COINLAYER_API_KEY","target","then","response","data","rates","setItem","JSON","stringify","catch","error","console","headers","Authorization","handleInvertir","post","criptomoneda","monto","children","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","simbolo","onClick","type","min","max","value","onChange","e","Number","_c","$RefreshReg$"],"sources":["/Users/luistejada/Downloads/FinalProject/frontend/src/components/ListaCriptomonedas.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom'; \nimport axios from 'axios';\n\nconst ListaCriptomonedas: React.FC = () => {\n  const [criptomonedas, setCriptomonedas] = useState<{ [key: string]: number }>({});\n  const [saldo, setSaldo] = useState(0);  \n  const [criptoSeleccionada, setCriptoSeleccionada] = useState('');\n  const [montoInvertido, setMontoInvertido] = useState(0);  \n  const [mensaje, setMensaje] = useState('');\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    \n    if (token) {\n      // Obtener criptomonedas de la API y guardar en el localStorage\n      axios.get('http://api.coinlayer.com/live', {\n        params: {\n          access_key: process.env.REACT_APP_COINLAYER_API_KEY,\n          target: 'USD',\n        }\n      })\n      .then(response => {\n        setCriptomonedas(response.data.rates);\n        // Guardar los precios de criptomonedas en localStorage\n        localStorage.setItem('preciosCriptos', JSON.stringify(response.data.rates));\n      })\n      .catch(error => console.error('Error al obtener criptomonedas', error));\n\n      // Obtener saldo del usuario\n      axios.get('http://localhost:5000/api/saldo', {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n      .then(response => setSaldo(response.data.saldo))\n      .catch(error => console.error('Error al obtener el saldo', error));\n    }\n  }, []);\n\n  const handleInvertir = async () => {\n    if (!criptoSeleccionada || montoInvertido <= 0) {\n      setMensaje('Selecciona una criptomoneda y un monto válido.');\n      return;\n    }\n\n    if (montoInvertido > saldo) {\n      setMensaje('No tienes suficiente saldo para esta inversión.');\n      return;\n    }\n\n    const token = localStorage.getItem('token');\n    try {\n      const response = await axios.post('http://localhost:5000/api/portafolio/invertir', \n        { criptomoneda: criptoSeleccionada, monto: montoInvertido },\n        { headers: { Authorization: `Bearer ${token}` } }\n      );\n      setMensaje(`Has invertido ${montoInvertido} USD en ${criptoSeleccionada}.`);\n    } catch (error) {\n      setMensaje('Error al realizar la inversión.');\n    }\n  };\n\n  return (\n    <div>\n      <h2>Lista de Criptomonedas</h2>\n      <ul>\n        {Object.keys(criptomonedas).map((simbolo) => (\n          <li key={simbolo}>\n            {simbolo}: ${criptomonedas[simbolo]}\n            <button onClick={() => setCriptoSeleccionada(simbolo)}>Seleccionar</button>\n          </li>\n        ))}\n      </ul>\n\n      {criptoSeleccionada && (\n        <>\n          <h3>Invertir en {criptoSeleccionada}</h3>\n          <p>Saldo disponible: ${saldo}</p>\n          <input \n            type=\"range\" \n            min=\"0\" \n            max={saldo} \n            value={montoInvertido} \n            onChange={(e) => setMontoInvertido(Number(e.target.value))} \n          />\n          <p>Monto a invertir: ${montoInvertido}</p>\n          <button onClick={handleInvertir}>Invertir</button>\n        </>\n      )}\n\n      <button onClick={() => navigate('/home')}>Volver a Home</button>\n      <p>{mensaje}</p>\n    </div>\n  );\n};\n\nexport default ListaCriptomonedas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}