{"ast":null,"code":"var _jsxFileName = \"/Users/luistejada/Downloads/FinalProject/frontend/src/components/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n// Define la interfaz para los portafolios\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [portafolios, setPortafolios] = useState([]);\n  const [valorTotalUSD, setValorTotalUSD] = useState(0); // Para mostrar el total en dólares\n  const navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      // Obtener los datos del usuario\n      axios.get('http://localhost:5000/auth/me', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => setUser(response.data)).catch(error => console.error('Error al obtener el usuario', error));\n\n      // Obtener los portafolios\n      axios.get('http://localhost:5000/api/portafolio/lista', {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      }).then(response => {\n        setPortafolios(response.data);\n\n        // Cargar precios desde localStorage\n        const preciosCriptos = localStorage.getItem('preciosCriptos');\n        if (preciosCriptos) {\n          const preciosActuales = JSON.parse(preciosCriptos); // Parsear el JSON local\n\n          // Calcular el valor total en USD de todos los portafolios\n          let total = 0;\n          response.data.forEach(portafolio => {\n            const precioActual = preciosActuales[portafolio.criptomoneda];\n            if (precioActual) {\n              const cantidadCriptos = portafolio.cantidad_invertida / portafolio.precio_compra; // Calcular cuántas unidades de la cripto se poseen\n              const valorEnDolares = cantidadCriptos * precioActual; // Valor en USD actual de la inversión\n              total += valorEnDolares; // Sumar el valor de cada criptomoneda al total\n            }\n          });\n          setValorTotalUSD(total); // Actualizar el valor total en USD\n        }\n      }).catch(error => console.error('Error al obtener los portafolios', error));\n    }\n  }, []);\n\n  // Función para desloguearse\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Bienvenido a la Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), user ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Bienvenido, \", user.nombre, \"!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Tu saldo actual es: $\", user.saldo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Valor total de tus inversiones en USD: $\", valorTotalUSD.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/agregar-saldo'),\n        children: \"Agregar Saldo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate('/lista-criptomonedas'),\n        children: \"Ver Criptomonedas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Mis Inversiones:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: portafolios.map(portafolio => {\n          const cantidadCriptos = portafolio.cantidad_invertida / portafolio.precio_compra; // Calcular cuántas unidades de la cripto se poseen\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [portafolio.criptomoneda, \": \", cantidadCriptos.toFixed(6), \" unidades\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this), \"Invertido: $\", portafolio.cantidad_invertida.toFixed(2), \" a un precio de compra de $\", portafolio.precio_compra]\n          }, portafolio.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"Cerrar sesi\\xF3n\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"4EN7GpmYDHmZETMtY1F8NVMMrcA=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","axios","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","user","setUser","portafolios","setPortafolios","valorTotalUSD","setValorTotalUSD","navigate","token","localStorage","getItem","get","headers","Authorization","then","response","data","catch","error","console","preciosCriptos","preciosActuales","JSON","parse","total","forEach","portafolio","precioActual","criptomoneda","cantidadCriptos","cantidad_invertida","precio_compra","valorEnDolares","handleLogout","removeItem","children","fileName","_jsxFileName","lineNumber","columnNumber","nombre","saldo","toFixed","onClick","map","id","_c","$RefreshReg$"],"sources":["/Users/luistejada/Downloads/FinalProject/frontend/src/components/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\n// Define la interfaz para los portafolios\ninterface Portafolio {\n  id: number;\n  criptomoneda: string;\n  cantidad_invertida: number; // Este es el monto en USD invertido\n  precio_compra: number; // Precio de compra por unidad de la criptomoneda\n}\n\nconst Home: React.FC = () => {\n  const [user, setUser] = useState<{ nombre: string, saldo: number } | null>(null);\n  const [portafolios, setPortafolios] = useState<Portafolio[]>([]);\n  const [valorTotalUSD, setValorTotalUSD] = useState(0); // Para mostrar el total en dólares\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    \n    if (token) {\n      // Obtener los datos del usuario\n      axios.get('http://localhost:5000/auth/me', {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n      .then(response => setUser(response.data))\n      .catch(error => console.error('Error al obtener el usuario', error));\n\n      // Obtener los portafolios\n      axios.get('http://localhost:5000/api/portafolio/lista', {\n        headers: { Authorization: `Bearer ${token}` }\n      })\n      .then(response => {\n        setPortafolios(response.data);\n\n        // Cargar precios desde localStorage\n        const preciosCriptos = localStorage.getItem('preciosCriptos');\n        if (preciosCriptos) {\n          const preciosActuales = JSON.parse(preciosCriptos); // Parsear el JSON local\n          \n          // Calcular el valor total en USD de todos los portafolios\n          let total = 0;\n          response.data.forEach((portafolio: Portafolio) => {\n            const precioActual = preciosActuales[portafolio.criptomoneda];\n            if (precioActual) {\n              const cantidadCriptos = portafolio.cantidad_invertida / portafolio.precio_compra; // Calcular cuántas unidades de la cripto se poseen\n              const valorEnDolares = cantidadCriptos * precioActual; // Valor en USD actual de la inversión\n              total += valorEnDolares; // Sumar el valor de cada criptomoneda al total\n            }\n          });\n          setValorTotalUSD(total); // Actualizar el valor total en USD\n        }\n      })\n      .catch(error => console.error('Error al obtener los portafolios', error));\n    }\n  }, []);\n\n  // Función para desloguearse\n  const handleLogout = () => {\n    localStorage.removeItem('token');\n    navigate('/login');\n  };\n\n  return (\n    <div>\n      <h2>Bienvenido a la Home</h2>\n      {user ? (\n        <>\n          <p>Bienvenido, {user.nombre}!</p>\n          <p>Tu saldo actual es: ${user.saldo}</p>\n\n          {/* Mostrar el valor total en USD de todos los portafolios */}\n          <h3>Valor total de tus inversiones en USD: ${valorTotalUSD.toFixed(2)}</h3>\n\n          {/* Botones */}\n          <button onClick={() => navigate('/agregar-saldo')}>Agregar Saldo</button>\n          <button onClick={() => navigate('/lista-criptomonedas')}>Ver Criptomonedas</button>\n\n          {/* Listar los portafolios del usuario */}\n          <h3>Mis Inversiones:</h3>\n          <ul>\n            {portafolios.map((portafolio) => {\n              const cantidadCriptos = portafolio.cantidad_invertida / portafolio.precio_compra; // Calcular cuántas unidades de la cripto se poseen\n              return (\n                <li key={portafolio.id}>\n                  {portafolio.criptomoneda}: {cantidadCriptos.toFixed(6)} unidades\n                  <br />\n                  Invertido: ${portafolio.cantidad_invertida.toFixed(2)} a un precio de compra de ${portafolio.precio_compra}\n                </li>\n              );\n            })}\n          </ul>\n\n          <button onClick={handleLogout}>Cerrar sesión</button>\n        </>\n      ) : (\n        <p>Cargando...</p>\n      )}\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}